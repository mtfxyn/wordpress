<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>linux &#8211; mtfxyn的小屋</title>
	<atom:link href="https://mtfxyn.eu.org/category/linux/feed/?simply_static_page=83" rel="self" type="application/rss+xml" />
	<link>/</link>
	<description></description>
	<lastBuildDate>Sat, 06 Jan 2024 03:42:02 +0000</lastBuildDate>
	<language>zh-CN</language>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=6.5.2</generator>
	<item>
		<title>PVE/Linux使用NTFS3挂载NTFS分区</title>
		<link>/hello-world/</link>
					<comments>/hello-world/#comments</comments>
		
		<dc:creator><![CDATA[mtfxyn]]></dc:creator>
		<pubDate>Sun, 31 Dec 2023 19:34:16 +0000</pubDate>
				<category><![CDATA[linux]]></category>
		<guid isPermaLink="false">http://mtf.ski:2233/?p=1</guid>

					<description><![CDATA[简介统一使用NTFS分区避免Windows和Linux存储的文件不互通，且在PVE中存放的文件回到Window [&#8230;]]]></description>
										<content:encoded><![CDATA[
<p><strong>简介</strong>统一使用NTFS分区避免Windows和Linux存储的文件不互通，且在PVE中存放的文件回到Window是也可以轻松读取，非常方便。</p>



<p>Windows 和 Linux 使用各自的分区格式存储文件, 这就导致文件共享非常不方便，不过总有大神出面解决这类问题，写出好用的工具使Linux下可以挂载NTFS，并可完美读写文件。</p>



<blockquote class="wp-block-quote is-layout-flow wp-block-quote-is-layout-flow">
<p>过时的方案介绍</p>
</blockquote>



<ul>
<li>NTFS-3G<br>NTFS-3G 是微软 NTFS 的一个开源实现，同时支持读和写。NTFS-3G 开发者使用用户空间文件系统 FUSE辅助开发并帮助实现可移植性。其在用户层实现的一个模仿对 NTFS 支持的文件系统，对 NTFS 的访问逻辑代码都是在用户层代码实现的。</li>
</ul>



<blockquote class="wp-block-quote is-layout-flow wp-block-quote-is-layout-flow">
<p>最新的解决方案</p>
</blockquote>



<ul>
<li>NTFS3<br>Paragon于2020 年在 GNU 通用许可证下将之前只提供给商业客户的 NTFS3 驱动程序贡献到 Linux 主线，NTFS3 是内核态的驱动，在开源后的一年里，NTFS3 的驱动经过了多轮审查和修改，用来提高代码质量。直到 2021年Linux 内核 5.15 合并了 Paragon 提供的 NTFS3 内核驱动，它拥有更高的性能和更多的特性。</li>
</ul>



<ul>
<li>&nbsp;该驱动程序实现了对 NTFS 文件系统中的正常、稀疏和压缩文件的读/写支持。</li>



<li>&nbsp;支持本地日志回放。</li>



<li>&nbsp;支持已挂载的 NTFS 卷的 NFS 导出。</li>



<li>&nbsp;支持文件和文件夹的权限管理。</li>
</ul>



<h3 class="wp-block-heading">PVE、Linux 使用 NTFS3 挂载 NTFS 分区</h3>



<h5 class="wp-block-heading">1. 在PVE shell控制台挂载磁盘NTFS分区</h5>



<p>输入下面命令查找我们的NTFS磁盘及分区</p>



<pre class="wp-block-code"><code>lsblk
</code></pre>



<figure class="wp-block-image"><img decoding="async" src="https://1023.org.cn/static/img/20220831151226.png" alt="20220831151226.png"/></figure>



<p>我将我的Widows磁盘直接插到了PVE物理机，可以看到我有一个磁盘，和多个分区，其中sda1为 Windows下的 ESP Fat32分区，sda2为原安装windows的NTFS分区，我们使用这个分区作为后续挂载分区，其它分区留个悬念，有兴趣的可以私聊。</p>



<h5 class="wp-block-heading">2. 挂载sda2分区</h5>



<p>我们先创建一个目录</p>



<pre class="wp-block-code"><code>mkdir /mnt/sda2
</code></pre>



<p>挂载 sda2 到新建的目录</p>



<pre class="wp-block-code"><code>mount -t ntfs /dev/sda2 /mnt/sda2
</code></pre>



<p>上面的挂载方式为只读挂载，只读挂载的分区在Linux下无法写入内容，也无法添加到PVE目录，我们需要读写方式挂载分区</p>



<pre class="wp-block-code"><code>mount -t ntfs3 /dev/sda2 /mnt/sda2
</code></pre>



<p>完成上面的操作，使用命令ls就可以看到NTFS分区里面的文件了</p>



<pre class="wp-block-code"><code>ls /mnt/sda2
</code></pre>



<h5 class="wp-block-heading">3. 开机时自动挂载</h5>



<p>编辑 /etc/fstab 文件，添加如下行：</p>



<pre class="wp-block-code"><code>UUID=**** /data ntfs3
</code></pre>



<p>其中 UUID=**** 是指定卷（分区）的 UUID。使用 UUID 的好处在于它们与磁盘挂载顺序无关。如果你在 BIOS 中改变了你的存储设备顺序，或是重新拔插了存储设备，或是一些 BIOS 可能会随机地改变存储设备的顺序，那么用 UUID 来表示指定卷（分区）会更有效。可以使用 blkid 命令查看 UUID 。</p>



<h5 class="wp-block-heading">4. 登录到PVE添加目录</h5>



<p>数据中心 =》 存储 =》 添加 =》 目录 ，在目录中输入挂载的路径</p>



<figure class="wp-block-image"><img decoding="async" src="https://1023.org.cn/static/img/20220831151311.png" alt="20220831151311.png"/></figure>



<figure class="wp-block-image"><img decoding="async" src="https://1023.org.cn/static/img/20220831151321.png" alt="20220831151321.png"/></figure>
]]></content:encoded>
					
					<wfw:commentRss>/hello-world/feed/</wfw:commentRss>
			<slash:comments>2</slash:comments>
		
		
			</item>
	</channel>
</rss>
